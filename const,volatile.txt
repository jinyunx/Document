文章基础：

       （1） “编译器一般不为const变量分配内存，而是将它保存在符号表中，这使得它成为一个编译期间的值，没有了存储与读内存的操作。”      

       （2） volatile的作用是“告诉编译器，i是随时可能发生变化的，每次使用它的时候必须从内存中取出i的值”。

                                                                                                                                          ― ―《c语言深度解剖》

一，const, volatile含义

（1）const含义是“请做为常量使用”，而并非“放心吧，那肯定是个常量”。
（2）volatile的含义是“请不要做自以为是的优化，这个值可能变掉的”，而并非“你可以修改这个值”。



二，const, volatile的作用以及起作用的阶段

（1）const只在编译期有用，在运行期无用

          const在编译期保证在C的“源代码”里面，没有对其修饰的变量进行修改的地方（如有则报错，编译不通过），而运行期该变量的值是否被改变则不受const的限制。

（2） volatile在编译期和运行期都有用

         在编译期告诉编译器：请不要做自以为是的优化，这个变量的值可能会变掉；

         在运行期：每次用到该变量的值，都从内存中取该变量的值。



补充：编译期 -- C编译器将源代码转化为汇编，再转化为机器码的过程；运行期 -- 机器码在CPU中执行的过程。



三，const, volatile同时修饰一个变量

（1）合法性

          “volatile”的含义并非是“non-const”，volatile 和 const 不构成反义词，所以可以放一起修饰一个变量。

（2）同时修饰一个变量的含义

         表示一个变量在程序编译期不能被修改且不能被优化；在程序运行期，变量值可修改，但每次用到该变量的值都要从内存中读取，以防止意外错误。

